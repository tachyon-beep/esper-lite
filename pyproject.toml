[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "esper-lite"
version = "0.1.0"
description = "Esper-Lite morphogenetic control system prototype scaffold."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
authors = [
  {name = "Esper Engineering", email = "engineering@esper.local"}
]
keywords = ["esper", "morphogenesis", "control-loop", "blueprint", "pytorch"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "License :: OSI Approved :: Apache Software License"
]
dependencies = [
  "torch==2.8.0",
  "torchvision==0.23.0",
  "torchaudio==2.8.0",
  "torch-geometric==2.6.1",
  "torch-scatter==2.1.2",
  "torch-sparse==0.6.18",
  "torch-cluster==1.6.3",
  "torch-spline-conv==1.2.2",
  "ruff>=0.5.6",
  "pydantic>=2.8.2,<3",
  "pydantic-settings>=2.6.0,<3",
  "protobuf>=5.28.0,<7",
  "orjson>=3.9.0,<4",
  "redis>=5.2.0,<6",
  "sqlalchemy>=2.0.31,<3",
  "fastapi>=0.115.2,<0.116",
  "uvicorn[standard]>=0.30.4,<0.31",
  "httpx>=0.27.2,<0.28",
  "aiohttp>=3.10.5,<4",
  "structlog>=24.2.0,<25",
  "python-dotenv>=1.0.1,<2",
  "prometheus-client>=0.20.0,<1",
  "elasticsearch>=8.14.0,<9",
  "psutil>=5.9.0,<6",
  "pynvml>=11.4.1,<12"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.3.3,<9",
  "pytest-asyncio>=0.23.7,<0.24",
  "pytest-cov>=5.0.0,<6",
  "hypothesis>=6.112.0,<7",
  "mypy>=1.10.0,<2",
  "grpcio-tools>=1.66.0,<2",
  "fakeredis>=2.21.3,<3",
  "types-redis>=4.6.0.20240906",
  "types-protobuf>=5.28.0.20240918",
  "types-aiofiles>=23.2.0.20240311",
  "ipykernel>=6.29.5,<7",
  "pylint>=3.3.1,<4",
  "black>=24.8.0,<25",
  "jsonschema>=4.23.0,<5"
]

docs = [
  "mkdocs>=1.6.0,<2",
  "mkdocs-material>=9.5.20,<10"
]

# Optional performance-focused extras
perf = [
  "orjson>=3.9.0,<4"
]

# Optional system metrics deps (fail-open at runtime)
sysmetrics = [
  "psutil>=5.9.0,<6",
  "pynvml>=11.4.1,<12"
]

[project.scripts]
esper-nissa-service = "esper.nissa.service_runner:main"
esper-weatherlight-service = "esper.weatherlight.service_runner:main"
esper-urabrask-produce = "esper.urabrask.cli:main"
esper-leyline-generate = "esper.leyline.tools:generate_bindings_main"

[project.urls]
"Homepage" = "https://github.com/esperai/esper-lite"
"Documentation" = "https://github.com/esperai/esper-lite/docs"

[tool.hatch.version]
path = "src/esper/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/esper"]

[tool.hatch.build.targets.sdist]
include = [
  "src/esper",
  "README.md",
  "pyproject.toml",
  "scripts",
]

[tool.ruff]
line-length = 140
extend-exclude = [
  "src/esper/leyline/_generated",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "N", "B", "ANN", "C4"]
ignore = ["ANN401"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["esper"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --strict-markers --disable-warnings"
testpaths = ["tests"]
xfail_strict = true
markers = [
  "integration: tests that require external infrastructure",
  "performance: performance-sensitive benchmarks",
  "perf: lightweight performance smoke tests",
]
timeout = 120
timeout_method = "signal"
timeout_func_only = false

[tool.coverage.run]
branch = true
source = ["esper"]

[tool.coverage.report]
omit = [
  "tests/*",
  "src/esper/__main__.py"
]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = true
ignore_missing_imports = false
namespace_packages = true
packages = ["esper"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pylint.MASTER]
rcfile = ".codacy/tools-configs/pylint.rc"
