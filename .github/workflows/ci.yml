name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: quality-checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Preinstall Torch and PyG wheels explicitly to avoid build-from-source on CI
          pip install torch==2.8.0 torchvision==0.23.0 torchaudio==2.8.0
          pip install             torch-scatter==2.1.2             torch-sparse==0.6.18             torch-cluster==1.6.3             torch-spline-conv==1.2.2             -f https://data.pyg.org/whl/torch-2.8.0+cpu.html
          pip install torch-geometric==2.6.1
          pip install -e .[dev]

      - name: Ruff (lint)
        continue-on-error: true
        run: |
          ruff --version
          ruff check src/esper

      - name: Pylint (lint)
        run: |
          pylint --rcfile .codacy/tools-configs/pylint.rc src/esper

      - name: Mypy (type-check)
        run: |
          mypy src/esper

      - name: Guard Shared Enums
        run: |
          python scripts/check_shared_types.py

  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: unit-tests
            pytest-args: >-
              -m "not integration and not performance" --cov=esper --cov-report=xml --cov-report=term
          - name: integration-tests
            pytest-args: -m integration
          - name: contract-tests
            pytest-args: tests/leyline/test_contracts.py
          - name: serialization-tests
            pytest-args: -m "not performance" tests/leyline/test_serialization.py
          - name: live-graph-tests
            pytest-args: >-
              -m "not performance" tests/tamiyo/test_service.py tests/tamiyo/test_policy_gnn.py
            tamiyo_graph_strict: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Preinstall Torch and PyG wheels explicitly to avoid build-from-source on CI
          pip install torch==2.8.0 torchvision==0.23.0 torchaudio==2.8.0
          pip install             torch-scatter==2.1.2             torch-sparse==0.6.18             torch-cluster==1.6.3             torch-spline-conv==1.2.2             -f https://data.pyg.org/whl/torch-2.8.0+cpu.html
          pip install torch-geometric==2.6.1
          pip install -e .[dev]

      - name: Run ${{ matrix.name }}
        env:
          REDIS_URL: redis://localhost:6379/0
          TAMIYO_GRAPH_STRICT: ${{ matrix.tamiyo_graph_strict }}
          TAMIYO_ENABLE_COMPILE: 'false'
        run: |
          pytest ${{ matrix.pytest-args }}

      - name: Upload coverage artifact
        if: ${{ matrix.name == 'unit-tests' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-tests
          path: coverage.xml
          if-no-files-found: error
          retention-days: 7

  coverage:
    name: coverage-upload
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.event_name == 'push' }}
    timeout-minutes: 5
    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-unit-tests
          path: .

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
        continue-on-error: true

      - name: Retry Codacy upload on failure
        if: ${{ failure() }}
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
        continue-on-error: true
