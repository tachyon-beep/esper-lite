syntax = "proto3";

package esper.leyline.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// -----------------------------------------------------------------------------
// Enumerations
// -----------------------------------------------------------------------------

enum SeedLifecycleStage {
  SEED_STAGE_UNKNOWN = 0;
  SEED_STAGE_DORMANT = 1;
  SEED_STAGE_GERMINATED = 2;
  SEED_STAGE_TRAINING = 3;
  SEED_STAGE_BLENDING = 4;
  SEED_STAGE_SHADOWING = 5;
  SEED_STAGE_PROBATIONARY = 6;
  SEED_STAGE_FOSSILIZED = 7;
  SEED_STAGE_CULLED = 8;
  SEED_STAGE_EMBARGOED = 9;
  SEED_STAGE_RESETTING = 10;
  SEED_STAGE_TERMINATED = 11;
}

enum SeedLifecycleGate {
  SEED_GATE_UNKNOWN = 0;
  SEED_GATE_G0_SANITY = 1;
  SEED_GATE_G1_GRADIENT_HEALTH = 2;
  SEED_GATE_G2_STABILITY = 3;
  SEED_GATE_G3_INTERFACE = 4;
  SEED_GATE_G4_SYSTEM_IMPACT = 5;
  SEED_GATE_G5_RESET = 6;
}

enum HealthStatus {
  HEALTH_STATUS_UNKNOWN = 0;
  HEALTH_STATUS_HEALTHY = 1;
  HEALTH_STATUS_DEGRADED = 2;
  HEALTH_STATUS_UNHEALTHY = 3;
  HEALTH_STATUS_CRITICAL = 4;
}

enum CircuitBreakerState {
  CIRCUIT_STATE_UNKNOWN = 0;
  CIRCUIT_STATE_CLOSED = 1;
  CIRCUIT_STATE_OPEN = 2;
  CIRCUIT_STATE_HALF_OPEN = 3;
}

enum CommandType {
  COMMAND_UNKNOWN = 0;
  COMMAND_SEED = 1;
  COMMAND_ROLLBACK = 2;
  COMMAND_OPTIMIZER = 3;
  COMMAND_CIRCUIT_BREAKER = 4;
  COMMAND_PAUSE = 5;
  COMMAND_EMERGENCY = 6;
  COMMAND_STRUCTURAL_PRUNING = 7;
}

enum SeedOperation {
  SEED_OP_UNKNOWN = 0;
  SEED_OP_GERMINATE = 1;
  SEED_OP_START_TRAINING = 2;
  SEED_OP_START_GRAFTING = 3;
  SEED_OP_STABILIZE = 4;
  SEED_OP_EVALUATE = 5;
  SEED_OP_FINE_TUNE = 6;
  SEED_OP_FOSSILIZE = 7;
  SEED_OP_CULL = 8;
  SEED_OP_CANCEL = 9;
}

enum MessagePriority {
  MESSAGE_PRIORITY_UNSPECIFIED = 0;
  MESSAGE_PRIORITY_LOW = 1;
  MESSAGE_PRIORITY_NORMAL = 2;
  MESSAGE_PRIORITY_HIGH = 3;
  MESSAGE_PRIORITY_CRITICAL = 4;
}

enum DeliveryGuarantee {
  DELIVERY_GUARANTEE_UNKNOWN = 0;
  DELIVERY_GUARANTEE_AT_LEAST_ONCE = 1;
  DELIVERY_GUARANTEE_AT_MOST_ONCE = 2;
  DELIVERY_GUARANTEE_EXACTLY_ONCE = 3;
}

enum TelemetryLevel {
  TELEMETRY_LEVEL_UNSPECIFIED = 0;
  TELEMETRY_LEVEL_INFO = 1;
  TELEMETRY_LEVEL_WARNING = 2;
  TELEMETRY_LEVEL_ERROR = 3;
  TELEMETRY_LEVEL_CRITICAL = 4;
}

enum FieldReportOutcome {
  FIELD_REPORT_OUTCOME_UNSPECIFIED = 0;
  FIELD_REPORT_OUTCOME_SUCCESS = 1;
  FIELD_REPORT_OUTCOME_NEUTRAL = 2;
  FIELD_REPORT_OUTCOME_REGRESSION = 3;
  FIELD_REPORT_OUTCOME_ABORTED = 4;
}

enum BlueprintTier {
  BLUEPRINT_TIER_UNSPECIFIED = 0;
  BLUEPRINT_TIER_SAFE = 1;
  BLUEPRINT_TIER_EXPERIMENTAL = 2;
  BLUEPRINT_TIER_HIGH_RISK = 3;
}

enum BusMessageType {
  BUS_MESSAGE_TYPE_UNSPECIFIED = 0;
  BUS_MESSAGE_TYPE_SYSTEM_STATE = 1;
  BUS_MESSAGE_TYPE_ADAPTATION_COMMAND = 2;
  BUS_MESSAGE_TYPE_FIELD_REPORT = 3;
  BUS_MESSAGE_TYPE_TELEMETRY = 4;
  BUS_MESSAGE_TYPE_POLICY_UPDATE = 5;
  BUS_MESSAGE_TYPE_KERNEL_PREFETCH_REQUEST = 6;
  BUS_MESSAGE_TYPE_KERNEL_PREFETCH_READY = 7;
  BUS_MESSAGE_TYPE_KERNEL_PREFETCH_ERROR = 8;
  BUS_MESSAGE_TYPE_KERNEL_CATALOG_UPDATE = 9;
}

// -----------------------------------------------------------------------------
// Training & Hardware State
// -----------------------------------------------------------------------------

message HardwareContext {
  string device_type = 1;             // "cuda", "cpu", "tpu"
  string device_id = 2;
  float total_memory_gb = 3;
  float available_memory_gb = 4;
  float temperature_celsius = 5;
  float utilization_percent = 6;
  uint32 compute_capability = 7;
}

message SeedState {
  string seed_id = 1;
  SeedLifecycleStage stage = 2;
  float gradient_norm = 3;
  float learning_rate = 4;
  uint32 layer_depth = 5;
  map<string, float> metrics = 6;
  uint32 age_epochs = 7;
  float risk_score = 8;
}

message SystemStatePacket {
  uint32 version = 1;
  uint32 current_epoch = 2;
  float validation_accuracy = 3;
  float validation_loss = 4;
  uint64 timestamp_ns = 5;
  HardwareContext hardware_context = 6;
  map<string, float> training_metrics = 7;
  repeated SeedState seed_states = 8;
  string packet_id = 9;
  uint64 global_step = 10;
  float training_loss = 11;
  string source_subsystem = 12;
  string training_run_id = 13;
  string experiment_name = 14;
  reserved 100 to 199;
}

// -----------------------------------------------------------------------------
// Control Plane
// -----------------------------------------------------------------------------

message CommandSeedOperation {
  SeedOperation operation = 1;
  string blueprint_id = 2;
  map<string, float> parameters = 3;
}

message CommandOptimizerAdjustment {
  string optimizer_id = 1;
  map<string, float> hyperparameters = 2;
}

message CommandCircuitBreaker {
  CircuitBreakerState desired_state = 1;
  string rationale = 2;
}

message AdaptationCommand {
  uint32 version = 1;
  string command_id = 2;
  CommandType command_type = 3;
  string target_seed_id = 4;
  uint32 execution_deadline_ms = 5;
  google.protobuf.Timestamp issued_at = 6;
  string issued_by = 7;
  oneof payload {
    CommandSeedOperation seed_operation = 10;
    CommandOptimizerAdjustment optimizer_adjustment = 11;
    CommandCircuitBreaker circuit_breaker = 12;
    google.protobuf.Struct rollback_payload = 13;
  }
  map<string, string> annotations = 20;
}

// -----------------------------------------------------------------------------
// Kernel Prefetch Pipeline
// -----------------------------------------------------------------------------

message KernelPrefetchRequest {
  string request_id = 1;
  string blueprint_id = 2;
  string training_run_id = 3;
  google.protobuf.Timestamp issued_at = 4;
}

message KernelArtifactReady {
  string request_id = 1;
  string blueprint_id = 2;
  string artifact_ref = 3;
  string checksum = 4;
  string guard_digest = 5;
  float prewarm_p50_ms = 6;
  float prewarm_p95_ms = 7;
}

message KernelArtifactError {
  string request_id = 1;
  string blueprint_id = 2;
  string reason = 3;
}

message KernelCatalogUpdate {
  string blueprint_id = 1;
  string artifact_ref = 2;
  string checksum = 3;
  string guard_digest = 4;
  float compile_ms = 5;
  float prewarm_ms = 6;
}

// -----------------------------------------------------------------------------
// Learning Feedback
// -----------------------------------------------------------------------------

message MitigationAction {
  string action_type = 1;   // e.g. CONSERVATIVE_MODE
  string rationale = 2;
}

message FieldReport {
  uint32 version = 1;
  string report_id = 2;
  string command_id = 3;
  string training_run_id = 4;
  string seed_id = 5;
  string blueprint_id = 6;
  FieldReportOutcome outcome = 7;
  map<string, float> metrics = 8;
  uint32 observation_window_epochs = 9;
  google.protobuf.Timestamp issued_at = 10;
  string tamiyo_policy_version = 11;
  repeated MitigationAction follow_up_actions = 12;
  string notes = 13;
}

message BlueprintParameterBounds {
  double min_value = 1;
  double max_value = 2;
}

message BlueprintDescriptor {
  string blueprint_id = 1;
  string name = 2;
  BlueprintTier tier = 3;
  map<string, BlueprintParameterBounds> allowed_parameters = 4;
  float risk = 5;
  uint32 stage = 6;
  bool quarantine_only = 7;
  bool approval_required = 8;
  string description = 9;
}

message BusEnvelope {
  BusMessageType message_type = 1;
  bytes payload = 2;
  map<string, string> attributes = 3;
}

message PolicyUpdate {
  uint32 version = 1;
  string policy_id = 2;
  string training_run_id = 3;
  google.protobuf.Timestamp issued_at = 4;
  string tamiyo_policy_version = 5;
  bytes payload = 6;
}

// -----------------------------------------------------------------------------
// Observability & Messaging
// -----------------------------------------------------------------------------

message MetricPoint {
  string name = 1;
  double value = 2;
  string unit = 3;
  map<string, string> attributes = 4;
}

message TelemetryEvent {
  string event_id = 1;
  string description = 2;
  TelemetryLevel level = 3;
  map<string, string> attributes = 4;
}

message TraceSpan {
  string span_id = 1;
  string parent_span_id = 2;
  string name = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
  map<string, string> attributes = 6;
}

message SystemHealth {
  HealthStatus status = 1;
  string summary = 2;
  map<string, string> indicators = 3;
}

message TelemetryPacket {
  string packet_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  string source_subsystem = 3;
  TelemetryLevel level = 4;
  repeated MetricPoint metrics = 10;
  repeated TelemetryEvent events = 20;
  repeated TraceSpan spans = 30;
  SystemHealth system_health = 40;
}

message EventEnvelope {
  string event_id = 1;
  string event_type = 2;
  string source_subsystem = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Duration processing_deadline = 5;
  google.protobuf.Duration ttl = 6;
  bytes payload = 10;
  string payload_type = 11;
  string content_encoding = 12;
  MessagePriority priority = 20;
  repeated string routing_keys = 21;
  string correlation_id = 22;
  DeliveryGuarantee delivery_guarantee = 30;
  uint32 max_attempts = 31;
  uint32 current_attempt = 32;
}

// -----------------------------------------------------------------------------
// Budgets & Limits
// -----------------------------------------------------------------------------

message PerformanceBudgets {
  uint32 epoch_boundary_ms = 1;
  uint32 tamiyo_inference_ms = 2;
  uint32 systemstate_assembly_ms = 3;
  uint32 adaptation_processing_ms = 4;
  uint32 fast_rollback_ms = 5;
  uint32 full_rollback_seconds = 6;
  uint32 protobuf_serialization_us = 7;
  uint32 message_validation_us = 8;
  uint32 breaker_timeout_ms = 9;
  uint32 breaker_reset_seconds = 10;
  uint32 importance_tracking_overhead_percent = 11;
  uint32 checkpoint_analysis_minutes_min = 12;
  uint32 checkpoint_analysis_minutes_max = 13;
  uint32 structured_validation_seconds = 14;
  uint32 rollback_coordination_seconds = 15;
}

message MemoryBudgets {
  float model_percent = 1;
  float optimizer_percent = 2;
  float gradients_percent = 3;
  float checkpoints_percent = 4;
  float telemetry_percent = 5;
  float morphogenetic_percent = 6;
  float emergency_percent = 7;
  float importance_statistics_percent = 8;
  float pruning_metadata_percent = 9;
}

message SystemLimits {
  uint32 max_seeds_per_epoch = 1;
  uint32 max_message_size_bytes = 2;
  uint32 max_queue_depth = 3;
  uint32 max_retry_attempts = 4;
  uint32 max_pause_quota = 5;
  uint32 max_gc_allocations_per_msg = 6;
  uint32 max_pruning_ratio_percent = 7;
  uint32 max_consecutive_pruning_failures = 8;
  uint32 max_checkpoint_storage_gb = 9;
  uint32 max_importance_history_days = 10;
}
